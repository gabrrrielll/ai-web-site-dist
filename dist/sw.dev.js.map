{"version":3,"sources":["sw.js"],"names":["CACHE_NAME","urlsToCache","self","addEventListener","event","skipWaiting","waitUntil","caches","open","then","cache","console","log","addAll","error","request","method","respondWith","match","response","fetch","networkResponse","url","startsWith","location","origin","status","put","clone","cacheWhitelist","keys","cacheNames","Promise","all","map","cacheName","indexOf","data","type"],"mappings":"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","sourcesContent":["const CACHE_NAME = 'ai-website-editor-v1';\n// This list should be expanded with actual bundled assets in a real build process.\nconst urlsToCache = [\n  '/',\n  '/index.html',\n  '/site-config.json'\n];\n\nself.addEventListener('install', event => {\n  self.skipWaiting(); // Activate worker immediately\n  event.waitUntil(\n    caches.open(CACHE_NAME)\n      .then(cache => {\n        console.log('Opened cache');\n        return cache.addAll(urlsToCache);\n      })\n      .catch(error => {\n        console.error('Cache installation failed:', error);\n      })\n  );\n});\n\nself.addEventListener('fetch', event => {\n  // We only want to cache GET requests.\n  if (event.request.method !== 'GET') {\n    return;\n  }\n\n  event.respondWith(\n    caches.open(CACHE_NAME).then(cache => {\n      return cache.match(event.request).then(response => {\n        // Return the cached response if it exists.\n        if (response) {\n          return response;\n        }\n\n        // If the request is not in the cache, fetch it from the network.\n        return fetch(event.request).then(networkResponse => {\n          // Don't cache third-party API requests (e.g., Gemini, Unsplash, Tailwind CDN)\n          if (!event.request.url.startsWith(self.location.origin)) {\n            return networkResponse;\n          }\n\n          // Also, don't cache responses that are not OK.\n          if (networkResponse && networkResponse.status === 200) {\n            // Clone the response because it's a one-time-use stream.\n            cache.put(event.request, networkResponse.clone());\n          }\n\n          return networkResponse;\n        }).catch(error => {\n          console.error('Fetch failed:', error);\n          // Return a fallback response or rethrow\n          throw error;\n        });\n      });\n    }).catch(error => {\n      console.error('Cache operation failed:', error);\n      // Fallback to network request\n      return fetch(event.request);\n    })\n  );\n});\n\n// Clean up old caches on activation\nself.addEventListener('activate', event => {\n  const cacheWhitelist = [CACHE_NAME];\n  event.waitUntil(\n    caches.keys().then(cacheNames => {\n      return Promise.all(\n        cacheNames.map(cacheName => {\n          if (cacheWhitelist.indexOf(cacheName) === -1) {\n            console.log('Deleting old cache:', cacheName);\n            return caches.delete(cacheName);\n          }\n        })\n      );\n    }).catch(error => {\n      console.error('Cache cleanup failed:', error);\n    })\n  );\n});\n\n// Handle message events properly\nself.addEventListener('message', event => {\n  if (event.data && event.data.type === 'SKIP_WAITING') {\n    self.skipWaiting();\n  }\n});\n"],"file":"sw.dev.js"}